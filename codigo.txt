#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#include "LedControlMS.h"
#define NumeroMatrices 1

const int triggerPin = 3;
const int echoPin = 4;
const int servoPin = 5;
const int humidityPin = A1;
int pinLDR = A0;
int valorLDR = 0;  

LedControl lc=LedControl(12,11,10, NumeroMatrices);

LiquidCrystal_I2C lcd(0x27, 16, 2); // Dirección I2C de la pantalla y tamaño (16x2)
Servo servo;
int pinLed = 10; //Esatblecer pin 10 para led
int pinFoto = A0; //Establecer pin A0 para fotorecistencia
int Intencidad = 0; //Intencidad de la luz

void setup() {
  pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);
 
  pinMode(10, OUTPUT); //Establecer pin como salida
  pinMode (A0,INPUT); //Establecer pin como entrada

  lcd.begin(16, 2);  // Inicializa la pantalla LCD
  lcd.backlight();   // Enciende la retroiluminación
 
  lcd.print("Dist: Hum: Temp:");  // Muestra el texto inicial
 
  servo.attach(servoPin);  // Inicializa el servo motor
 
  Serial.begin(9600);

  lc.shutdown(0,false);    // Despertar a la matriz
  lc.setIntensity(0,3);    // Intensidad a 8
  lc.clearDisplay(0);  


}

void loop() {

  Intencidad = analogRead(pinFoto);
  if(Intencidad > 307){ 
  digitalWrite(pinLed, HIGH); //Si hay luz ambiente prende el bombillo
  }else{
  digitalWrite(pinLed, LOW); //Si no hay luz ambiente apaga el bombillo
  }

  // Genera un pulso de 10 microsegundos en el pin del trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  valorLDR= analogRead(pinLDR);
  // Mide la duración del eco
  long duration = pulseIn(echoPin, HIGH);
 
  // Calcula la distancia en centímetros (la velocidad del sonido es de 343 metros/segundo)
  int distance = duration * 0.0343 / 2.0;
 
  // Lee el nivel de humedad
  int humedad = analogRead(A1);
 
  // Limpia la línea actual de la pantalla
  lcd.setCursor(0, 1);
  lcd.print("                ");
 
  // Muestra la distancia y el nivel de humedad en la misma línea de la pantalla
  lcd.setCursor(0, 1);
  lcd.print(distance);
  lcd.setCursor(8, 1);
  lcd.print(humedad);
  lcd.print(" ");
 
  // Verifica si la distancia es menor a 10 cm
  if (distance < 10) {
    // Activa el servo motor y lo gira en sentido antihorario en 45 grados
    servo.write(180);
    }
  else if (distance > 10) {
    // Desactiva el servo motor
    servo.write(0);
    }
  if (humedad > 100) {
    lc.setColumn(0, 6, 0xff);
    lc.setColumn(0, 7, 0xff);
}

if (humedad > 400) {
    lc.setColumn(0, 6, 0xff);
    lc.setColumn(0, 7, 0xff);  
    lc.setColumn(0, 5, 0xff);
    lc.setColumn(0, 4, 0xff);
} else {
    lc.setColumn(0, 6, 0x00);
    lc.setColumn(0, 7, 0x00);  
    lc.setColumn(0, 5, 0x00);
    lc.setColumn(0, 4, 0x00);
}

if (humedad > 1000) {
    lc.setColumn(0, 6, 0xff);
    lc.setColumn(0, 7, 0xff);  
    lc.setColumn(0, 5, 0xff);
    lc.setColumn(0, 4, 0xff);
    lc.setColumn(0, 3, 0xff);
    lc.setColumn(0, 2, 0xff);
} else {
    lc.setColumn(0, 6, 0x00);
    lc.setColumn(0, 7, 0x00);  
    lc.setColumn(0, 5, 0x00);
    lc.setColumn(0, 4, 0x00);
    lc.setColumn(0, 3, 0x00);
    lc.setColumn(0, 2, 0x00);
}

if (humedad > 1200) {
    lc.setColumn(0, 6, 0xff);
    lc.setColumn(0, 7, 0xff);  
    lc.setColumn(0, 5, 0xff);
    lc.setColumn(0, 4, 0xff);
    lc.setColumn(0, 3, 0xff);
    lc.setColumn(0, 2, 0xff);
    lc.setColumn(0, 1, 0xff);
    lc.setColumn(0, 0, 0xff);
} else {
    lc.setColumn(0, 6, 0x00);
    lc.setColumn(0, 7, 0x00);  
    lc.setColumn(0, 5, 0x00);
    lc.setColumn(0, 4, 0x00);
    lc.setColumn(0, 3, 0x00);
    lc.setColumn(0, 2, 0x00);
    lc.setColumn(0, 1, 0x00);
    lc.setColumn(0, 0, 0x00);
}

}